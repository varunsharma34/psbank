{"version":3,"file":"static/js/145.1133d28b.chunk.js","mappings":"uJAmBA,UAfqB,SAACA,GAEpB,IAAQC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KACFG,GAAWC,EAAAA,EAAAA,MAKjB,OAAOJ,GACLK,EAAAA,EAAAA,KAACC,EAAAA,GAAM,KAEPD,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAE,qBAAAC,OAAuBC,UAAUP,EAASQ,YAE1D,C","sources":["pages/PrivateRoute.js"],"sourcesContent":["import { useContext } from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { UserContext } from '../contexts/user.context';\n\nconst PrivateRoute = (props) => {\n  // Fetching the user from the user context.\n  const { user } = useContext(UserContext);\n  const location = useLocation();\n\n  // If the user is not logged in we are redirecting them\n  // to the login page. Otherwise we are letting them to\n  // continue to the page as per the URL using <Outlet />.\n  return user ? (\n    <Outlet />\n  ) : (\n    <Navigate to={`/login?redirectTo=${encodeURI(location.pathname)}`} />\n  );\n};\n\nexport default PrivateRoute;\n"],"names":["props","user","useContext","UserContext","location","useLocation","_jsx","Outlet","Navigate","to","concat","encodeURI","pathname"],"sourceRoot":""}