{"version":3,"file":"static/js/963.73671f72.chunk.js","mappings":"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","sources":["components/atoms/form-components/input/index.js","components/atoms/form-components/select/index.js","components/organisms/form/index.js","form-structures/login.js","pages/Login.js"],"sourcesContent":["import { TextField } from '@mui/material';\nimport { Controller } from 'react-hook-form';\n\nconst FormInputField = ({\n  name,\n  control,\n  label,\n  type = 'text',\n  required = false,\n  pattern,\n  formstate,\n  register,\n}) => {\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={(field) => (\n        <TextField\n          InputLabelProps={{ shrink: type === 'date' || field.value }}\n          fullWidth\n          type={type}\n          label={label}\n          variant='outlined'\n          name={name}\n          error={!!formstate.errors[name]}\n          helperText={\n            formstate.errors[name] ? formstate.errors[name].message : ''\n          }\n          {...register(name, {\n            required, // JS only: <p>error message</p> TS only support string\n            pattern,\n          })}\n        />\n      )}\n      defaultValue=''\n    />\n  );\n};\n\nexport default FormInputField;\n","import { FormControl, InputLabel, Select, FormHelperText } from '@mui/material';\nimport { Controller } from 'react-hook-form';\n\nconst ReactHookFormSelect = ({\n  name,\n  label,\n  control,\n  defaultValue,\n  children,\n  errors,\n  ...props\n}) => {\n  const labelId = `${name}-label`;\n  return (\n    <FormControl fullWidth {...props}>\n      <InputLabel id={labelId}>{label}</InputLabel>\n      <Controller\n        defaultValue={defaultValue}\n        render={({ field }) => (\n          <Select {...field} labelId={labelId} label={label}>\n            {children}\n          </Select>\n        )}\n        name={name}\n        control={control}\n      />\n      <FormHelperText>\n        {errors['type'] ? errors['type'].message : ''}\n      </FormHelperText>\n    </FormControl>\n  );\n};\nexport default ReactHookFormSelect;\n","import { Button, MenuItem, Grid } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport FormInputField from '../../atoms/form-components/input';\nimport ReactHookFormSelect from '../../atoms/form-components/select';\n\nconst Form = ({ data, formSubmitHandler, children }) => {\n  const { formFields, submitButtonText = 'Submit' } = data;\n  const { register, handleSubmit, control, formState } = useForm({\n    mode: 'all',\n  });\n\n  const onFormSubmit = (data) => {\n    formSubmitHandler(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onFormSubmit)}>\n      <Grid container direction='column' spacing={2} justifyContent='center'>\n        {formFields.length &&\n          formFields.map((field) => {\n            return field.type === 'select' ? (\n              <Grid item xs={12} key={field.name}>\n                <ReactHookFormSelect\n                  id={field.name}\n                  name={field.name}\n                  label={field.label}\n                  control={control}\n                  defaultValue={\n                    field.options &&\n                    field.options.length &&\n                    field.options[0].value\n                  }\n                  errors={formState.errors}\n                  error={!!formState.errors['type']}\n                >\n                  {field.options &&\n                    field.options.length &&\n                    field.options.map((option) => {\n                      return (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.name}\n                        </MenuItem>\n                      );\n                    })}\n                </ReactHookFormSelect>\n              </Grid>\n            ) : (\n              <Grid item xs={12} key={field.name}>\n                <FormInputField\n                  name={field.name}\n                  label={field.label}\n                  type={field.type}\n                  control={control}\n                  register={register}\n                  formstate={formState}\n                  required={field.required}\n                  pattern={field.pattern}\n                />\n              </Grid>\n            );\n          })}\n\n        <Grid item xs={12}>\n          <Button\n            fullWidth\n            size='large'\n            type='submit'\n            variant='contained'\n            color='primary'\n          >\n            {submitButtonText}\n          </Button>\n        </Grid>\n\n        {children}\n      </Grid>\n    </form>\n  );\n};\n\nexport default Form;\n","const LoginForm = {\n  formName: 'Login',\n  submitButtonText: 'Login',\n  formFields: [\n    {\n      label: 'Email',\n      name: 'email',\n      type: 'text',\n      required: {\n        value: true,\n        message: 'Email is required',\n      },\n      defaultValue: '',\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'password',\n      required: {\n        value: true,\n        message: 'Password is required',\n      },\n      defaultValue: '',\n    },\n  ],\n};\n\nexport default LoginForm;\n","import { useContext, useEffect, useState } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport { UserContext } from '../contexts/user.context';\nimport Form from '../components/organisms/form';\nimport LoginForm from '../form-structures/login';\nimport { Grid, Typography, Alert } from '@mui/material';\nimport PageContainer from '../components/molecules/container';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loginFormError, setLoginFormError] = useState();\n\n  // We are consuming our user-management context to\n  // get & set the user details here\n  const { user, fetchUser, emailPasswordLogin } = useContext(UserContext);\n\n  // This function will redirect the user to the\n  // appropriate page once the authentication is done.\n  const redirectNow = () => {\n    const redirectTo = location.search.replace('?redirectTo=', '');\n    navigate(redirectTo ? redirectTo : '/');\n  };\n\n  // Since there can be chances that the user is already logged in\n  // but whenever the app gets refreshed the user context will become\n  // empty. So we are checking if the user is already logged in and\n  // if so we are redirecting the user to the home page.\n  // Otherwise we will do nothing and let the user to login.\n  const loadUser = async () => {\n    if (!user) {\n      const fetchedUser = await fetchUser();\n      if (fetchedUser) {\n        // Redirecting them once fetched.\n        redirectNow();\n      }\n    }\n  };\n\n  // This useEffect will run only once when the component is mounted.\n  // Hence this is helping us in verifying whether the user is already logged in\n  // or not.\n  useEffect(() => {\n    loadUser(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const formSubmitHandler = async (data) => {\n    try {\n      // Here we are passing user details to our emailPasswordLogin\n      // function that we imported from our realm/authentication.js\n      // to validate the user credentials and login the user into our App.\n      const user = await emailPasswordLogin(data.email, data.password);\n      if (user) {\n        redirectNow();\n      }\n    } catch (error) {\n      setLoginFormError(error.error);\n    }\n  };\n\n  return (\n    <PageContainer type='formpage'>\n      <h1>{LoginForm.formName}</h1>\n      {loginFormError && (\n        <Alert severity='error' sx={{ marginBottom: '20px' }}>\n          {loginFormError}\n        </Alert>\n      )}\n      <Form data={LoginForm} formSubmitHandler={formSubmitHandler}>\n        <Grid item xs={12} marginBottom='20px'>\n          <Typography>\n            Already have an account? <Link to='/signup'>Signup</Link>\n          </Typography>\n        </Grid>\n      </Form>\n    </PageContainer>\n  );\n};\n\nexport default Login;\n"],"names":["_ref","name","control","label","_ref$type","type","_ref$required","required","pattern","formstate","register","_jsx","Controller","render","field","TextField","_objectSpread","InputLabelProps","shrink","value","fullWidth","variant","error","errors","helperText","message","defaultValue","children","props","_objectWithoutProperties","_excluded","labelId","concat","_jsxs","FormControl","InputLabel","id","_ref2","Select","FormHelperText","data","formSubmitHandler","formFields","_data$submitButtonTex","submitButtonText","_useForm","useForm","mode","handleSubmit","formState","onSubmit","Grid","container","direction","spacing","justifyContent","length","map","item","xs","ReactHookFormSelect","options","option","MenuItem","FormInputField","Button","size","color","formName","navigate","useNavigate","location","useLocation","_useState","useState","_useState2","_slicedToArray","loginFormError","setLoginFormError","_useContext","useContext","UserContext","user","fetchUser","emailPasswordLogin","redirectNow","redirectTo","search","replace","loadUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","useEffect","_callee2","_context2","email","password","t0","_x","PageContainer","LoginForm","Alert","severity","sx","marginBottom","Form","Typography","Link","to"],"sourceRoot":""}